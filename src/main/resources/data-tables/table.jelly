<?jelly escape-by-default='true'?>
<j:jelly xmlns:j="jelly:core" xmlns:st="jelly:stapler">
  <st:documentation>
    Renders a JQuery DataTables instance. The table data is loaded asynchronously from the associated view using
    an Ajax call. In order to correctly connect the jelly view with the Jenkins ModelObject via a Stapler proxy
    your model Java class needs to implement the AsyncTableContentProvider interface.

    <st:attribute name="model" use="required" type="io.jenkins.plugins.datatables.TableModel">
      The model of the table.
    </st:attribute>

    <st:attribute name="class" use="optional" type="String">
      Optional classes to be added to the table.
    </st:attribute>

  </st:documentation>

  <st:adjunct includes="io.jenkins.plugins.jquery3"/>
  <st:adjunct includes="io.jenkins.plugins.bootstrap5"/>
  <st:adjunct includes="io.jenkins.plugins.data-tables"/>
  <j:if test="${model.tableConfiguration.useResponsive}">
    <st:adjunct includes="io.jenkins.plugins.data-tables-responsive"/>
  </j:if>
  <j:if test="${model.tableConfiguration.useColReorder}">
    <st:adjunct includes="io.jenkins.plugins.data-tables-colreorder"/>
  </j:if>
  <j:if test="${model.tableConfiguration.useButtons}">
    <st:adjunct includes="io.jenkins.plugins.data-tables-buttons"/>
  </j:if>
  <j:if test="${model.tableConfiguration.useSelect}">
    <st:adjunct includes="io.jenkins.plugins.data-tables-select"/>
  </j:if>
  <st:adjunct includes="io.jenkins.plugins.bind-tables"/>

  <div class="table-responsive">
    <j:if test="${model.tableConfiguration.useButtons}">
      <div class="table-buttons-container clearfix"/>
    </j:if>
    <table class="table table-hover table-striped data-table dt-responsive nowrap ${class}"
           data-columns-definition="${model.columnsDefinition}" id="${model.id}"
           data-table-configuration="${model.tableConfigurationDefinition}"
           style="width: 100%;">
      <thead>
        <tr>
          <j:forEach var="c" items="${model.columns}">
            <th class="${c.headerClass}">${c.headerLabel}</th>
          </j:forEach>
        </tr>
      </thead>
    </table>
  </div>

  <st:bind var="tableDataProxy" value="${it}" />

</j:jelly>
